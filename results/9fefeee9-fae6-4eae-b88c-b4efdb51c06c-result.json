{"name": "test_xfail_not_run", "status": "skipped", "statusDetails": {"message": "XFAIL reason: [NOTRUN] \n\n_pytest.outcomes.XFailed: [NOTRUN]", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x7fe15623fdc0>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None) -> \"CallInfo\":\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/_pytest/runner.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/_pytest/runner.py:217: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.8/lib/python/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/_pytest/skipping.py:93: in pytest_runtest_setup\n    check_xfail_no_run(item)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_xfail_not_run>\n\n    def check_xfail_no_run(item):\n        \"\"\"check xfail(run=False)\"\"\"\n        if not item.config.option.runxfail:\n            evalxfail = item._store[evalxfail_key]\n            if evalxfail.istrue():\n                if not evalxfail.get(\"run\", True):\n>                   xfail(\"[NOTRUN] \" + evalxfail.getexplanation())\nE                   _pytest.outcomes.XFailed: [NOTRUN]\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/_pytest/skipping.py:111: XFailed"}, "description": "\n        run=False表示这条用例不执行\n        ", "start": 1616417751657, "stop": 1616417751657, "uuid": "c6543223-d95a-4d58-8797-c58536140434", "historyId": "11d576a43275b207e48a279c611911db", "testCaseId": "1a70322feb6003e093c11ecc663b50db", "fullName": "Tests.MarkDemo.test_marks.TestMarks#test_xfail_not_run", "labels": [{"name": "feature", "value": "pytest标记与分组"}, {"name": "tag", "value": "@pytest.mark.xfail(run=False)"}, {"name": "parentSuite", "value": "Tests.MarkDemo"}, {"name": "suite", "value": "test_marks"}, {"name": "subSuite", "value": "TestMarks"}, {"name": "host", "value": "gilbertdeMacBook-Pro.local"}, {"name": "thread", "value": "59090-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.MarkDemo.test_marks"}]}